"""Migrating

Revision ID: b12400b23ead
Revises: 
Create Date: 2024-11-11 15:48:48.640172

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b12400b23ead'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('symbol', sa.String(length=5), nullable=True),
    sa.Column('exchange_rate', sa.Float(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('currency_code')
    )
    op.create_table('entertainment_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('place_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('password_salt', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'suspended'), nullable=True),
    sa.Column('last_online', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('drivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('surname', sa.String(length=40), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('available', 'unavailable'), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('places',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('location', sa.String(length=40), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('entertainment_type_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('default_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.CheckConstraint('rating BETWEEN 1 AND 5', name='check_rating_between_1_and_5'),
    sa.ForeignKeyConstraint(['category_id'], ['place_categories.id'], ),
    sa.ForeignKeyConstraint(['entertainment_type_id'], ['entertainment_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_audits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.Enum('created', 'updated', 'deleted'), nullable=False),
    sa.Column('changed_data', sa.JSON(), nullable=True),
    sa.Column('action_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('preferred_entertainment_type', sa.Integer(), nullable=True),
    sa.Column('preferred_rating_range', sa.String(length=20), nullable=True),
    sa.Column('preferred_language', sa.Integer(), nullable=True),
    sa.Column('preferred_location', sa.String(length=40), nullable=True),
    sa.Column('preferred_price_range', sa.String(length=20), nullable=True),
    sa.CheckConstraint("preferred_price_range IN ('low', 'medium', 'high')", name='check_preferred_price_range'),
    sa.CheckConstraint("preferred_rating_range IN ('1-2', '2-3', '3-4', '4-5')", name='check_preferred_rating_range'),
    sa.ForeignKeyConstraint(['preferred_entertainment_type'], ['entertainment_types.id'], ),
    sa.ForeignKeyConstraint(['preferred_language'], ['languages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=True),
    sa.Column('login_timestamp', sa.DateTime(), nullable=True),
    sa.Column('logout_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token')
    )
    op.create_table('assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('availabilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('entity_type', sa.Enum('driver', 'place'), nullable=False),
    sa.Column('availability_start', sa.DateTime(), nullable=True),
    sa.Column('availability_end', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('booking_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'confirmed', 'cancelled'), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('pricing_snapshot', sa.JSON(), nullable=True),
    sa.Column('payment_status', sa.Enum('unpaid', 'paid', 'refunded'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('place_translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('translated_name', sa.String(length=40), nullable=True),
    sa.Column('translated_description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], ),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pricing_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.Column('rule_type', sa.Enum('seasonal', 'dynamic', 'discount'), nullable=False),
    sa.Column('rule_conditions', sa.JSON(), nullable=True),
    sa.Column('price_modifier', sa.Float(), nullable=True),
    sa.Column('rule_start', sa.DateTime(), nullable=True),
    sa.Column('rule_end', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('discount_type', sa.Enum('percentage', 'fixed_amount'), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('min_purchase_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('place_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('publish_date', sa.DateTime(), nullable=True),
    sa.CheckConstraint('rating BETWEEN 1 AND 5', name='check_rating_between_1_and_5'),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transportations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin_place_id', sa.Integer(), nullable=False),
    sa.Column('destination_place_id', sa.Integer(), nullable=False),
    sa.Column('transport_type', sa.String(length=20), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['destination_place_id'], ['places.id'], ),
    sa.ForeignKeyConstraint(['origin_place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'completed', 'failed'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emergency_contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('relation', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sa.Enum('credit_card', 'paypal', 'bank_transfer'), nullable=True),
    sa.Column('transaction_status', sa.Enum('completed', 'pending', 'failed'), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review_medias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('media_url', sa.String(length=255), nullable=True),
    sa.Column('media_type', sa.Enum('image', 'video'), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transportation_id', sa.Integer(), nullable=False),
    sa.Column('origin_place_id', sa.Integer(), nullable=False),
    sa.Column('destination_place_id', sa.Integer(), nullable=False),
    sa.Column('segment_order', sa.Integer(), nullable=False),
    sa.Column('distance_km', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('transport_mode', sa.Enum('bus', 'train', 'car', 'plane', 'boat', 'walking'), nullable=True),
    sa.ForeignKeyConstraint(['destination_place_id'], ['places.id'], ),
    sa.ForeignKeyConstraint(['origin_place_id'], ['places.id'], ),
    sa.ForeignKeyConstraint(['transportation_id'], ['transportations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('route_segments')
    op.drop_table('review_medias')
    op.drop_table('payments')
    op.drop_table('emergency_contacts')
    op.drop_table('booking_transactions')
    op.drop_table('transportations')
    op.drop_table('reviews')
    op.drop_table('promotions')
    op.drop_table('pricing_rules')
    op.drop_table('place_translations')
    op.drop_table('bookings')
    op.drop_table('availabilities')
    op.drop_table('assignments')
    op.drop_table('user_sessions')
    op.drop_table('user_preferences')
    op.drop_table('user_audits')
    op.drop_table('places')
    op.drop_table('drivers')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('place_categories')
    op.drop_table('languages')
    op.drop_table('entertainment_types')
    op.drop_table('currencies')
    op.drop_table('companies')
    # ### end Alembic commands ###
